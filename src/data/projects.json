[
  {
    "slug": "postbox28",
    "isFeatured": true,
    "projectName": "Company Portfolio for Postbox28",
    "summary": "A graphic intensive website filled with animations for a post-production studio based in Mumbai.",
    "description": "A graphic-intensive, animation-heavy website using React, GSAP, and TailwindCSS. Contentful CMS was used to showcase their impressive portfolio with YouTube video embeds. The website is a visual representation of Postbox28's creative vision, with every detail carefully considered for an immersive user experience.",
    "tags": ["frontend-development"],
    "featuredTags": ["Frontend Development"],
    "techStack": [
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "Tailwind CSS",
        "image": "../images/others/tailwind.png"
      },
      {
        "name": "GSAP",
        "image": "../images/others/gsap.png"
      },
      {
        "name": "Contentful",
        "image": "../images/others/contentful.png"
      }
    ],
    "images": [
      "../images/projects/Postbox/postbox1.png",
      "../images/projects/Postbox/postbox2.png",
      "../images/projects/Postbox/postbox3.png",
      "../images/projects/Postbox/postbox4.png",
      "../images/projects/Postbox/postbox5.png"
    ],
    "demo": "https://www.postbox28.com/"
  },
  {
    "slug": "attendance-system",
    "isFeatured": true,
    "projectName": "Automated Attendance System using Facial Recognition",
    "summary": "A university attendance system that uses facial recognition technology to streamline the attendance-taking process for professors and improve accuracy.",
    "description": "This project showcases digitized attendance system designed for schools and universities, powered by a Face Recognition REST API using Flask and face_recognition library. An app built with Flutter enables professors to easily record attendance, while an admin panel built with React and Redux manages student, teacher, and class data. The system's backend, built with Node.js/Express.js and MongoDB, handles all data including attendance records. Student photos are securely stored in Firebase Cloud Storage.",
    "tags": [
      "frontend-development",
      "backend-development",
      "cross-app-development",
      "deep-learning",
      "python"
    ],
    "featuredTags": ["Deep Learning", "Fullstack Development"],
    "techStack": [
      {
        "name": "Flutter",
        "image": "../images/others/flutter.png"
      },
      {
        "name": "Flask",
        "image": "../images/others/flask.png"
      },
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "Redux",
        "image": "../images/others/redux.png"
      },
      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },
      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      },
      {
        "name": "Firebase",
        "image": "../images/others/firebase.png"
      }
    ],
    "images": [
      "../images/projects/AttendanceSystem/Attendance1.png",
      "../images/projects/AttendanceSystem/Attendance2.png",
      "../images/projects/AttendanceSystem/Attendance3.png"
    ],
    "github": "https://github.com/gsriram24/attendance_system_face_recognition_api"
  },
  {
    "slug": "ppresports-portal",
    "isFeatured": true,
    "projectName": "League Registration Portal for PPR Esports",
    "summary": "Development of a full stack application for PPR Esports, a Sim Racing esports organization.",
    "description": "This full-stack application was developed to enable PPR Esports to host hundreds of online tournaments and allow thousands of users to register for them. It includes an admin panel for managing users and leagues. The backend was built using Node.js/Express.js with Discord Authentication, and MongoDB was used as the database. The frontend was developed using React.js with Redux for state management.",
    "tags": ["frontend-development", "backend-development"],
    "featuredTags": ["Fullstack Development"],
    "techStack": [
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "Redux",
        "image": "../images/others/redux.png"
      },
      {
        "name": "Tailwind CSS",
        "image": "../images/others/tailwind.png"
      },
      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },
      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      }
    ],
    "images": [
      "../images/projects/PPR/PPR1.png",
      "../images/projects/PPR/PPR2.png",
      "../images/projects/PPR/PPR3.png",
      "../images/projects/PPR/PPR4.png",
      "../images/projects/PPR/PPR5.png"
    ],
    "testimonials": {
      "name": "James Warren",
      "designation": "Owner, PPR Esports",
      "testimonial": "Working with G. Sriram on this site was a pleasure. We gave him a challenging task, with plenty of live functionality requirements, and the implementation of functions that he was unfamiliar with but learned. The work was done in a timely manner and was professional the whole time. Any requests we had were adhered to, and we will continue to be working with him in the future for any projects"
    },
    "demo": "https://ppresports.com/",
    "github": ""
  },
  {
    "slug": "karankowshik-portfolio",
    "isFeatured": true,
    "projectName": "Portfolio Website for Karan Kowshik",
    "summary": "Developed a portfolio website for Karan Kowshik, a UI/UX and Web Designer, to showcase his work and skills.",
    "description": "This project entailed crafting a highly responsive portfolio website for Karan Kowshik, a distinguished UI/UX and Web Designer. GatsbyJS was leveraged to realize a fully-functional portfolio website, with dynamically generated pages that ensures a highly-engaging and seamless user experience. The website's overall design and layout was bolstered using TailwindCSS, while Framer Motion was utilized to add an extra layer of visual appeal with its animations.",
    "tags": ["frontend-development"],
    "featuredTags": ["Frontend Development"],
    "techStack": [
      {
        "name": "Gatsby",
        "image": "../images/others/gatsby.png"
      },
      {
        "name": "Tailwind CSS",
        "image": "../images/others/tailwind.png"
      },
      {
        "name": "Framer Motion",
        "image": "../images/others/framer-motion.png"
      }
    ],
    "images": [
      "../images/projects/KaranPortfolio/karan1.png",
      "../images/projects/KaranPortfolio/karan2.png",
      "../images/projects/KaranPortfolio/karan3.png",
      "../images/projects/KaranPortfolio/karan4.png"
    ],
    "testimonials": {
      "name": "Karan Kowshik",
      "designation": "UI/UX & Web Designer",
      "testimonial": "It was amazing working with Sriram on my portfolio. Being a UI/UX designer I had specific requirements in terms of pixel perfection and smooth complex animations. Sriram took on these challenges brilliantly, delivering exactly what I was looking for. It was an amazing journey collaborating with him and I learned a lot of things during that time."
    },
    "demo": "https://karankowshik.com",
    "github": ""
  },

  {
    "slug": "substitute_teacher_management",
    "isFeatured": false,
    "projectName": "Substitue Teacher Management",
    "summary": "A Flutter app designed to efficiently locate substitute teachers in educational institutions.",
    "description": "Crafted with a keen eye towards the needs of educational institutions, this sophisticated mobile application empowers administrators to efficiently manage teacher absences and substitutions. Its powerful algorithm generates a list of qualified substitute teachers based on customized criteria, thereby allowing administrators to easily identify and choose the most suitable candidate. In addition, the application seamlessly integrates with email functionality, enabling administrators to swiftly notify selected substitutes and keep the academic calendar running like clockwork.",
    "tags": ["cross-app-development"],
    "featuredTags": ["App Development"],
    "techStack": [
      {
        "name": "Flutter",
        "image": "../images/others/flutter.png"
      },
      {
        "name": "Firebase",
        "image": "../images/others/firebase.png"
      }
    ],
    "images": [
      "../images/projects/Substitute/Substitute1.png",
      "../images/projects/Substitute/Substitute2.png"
    ],
    "demo": "",
    "github": "https://github.com/gsriram24/substitute_teacher_management"
  },

  {
    "slug": "seefood",
    "isFeatured": false,
    "projectName": "SeeFood",
    "summary": "A Flutter mobile app powered by Tensorflow Lite, capable of identifying 10 different food classes",
    "description": "SeeFood is an ingenious application inspired by the popular show Silicon Valley, designed to identify and classify 10 distinct types of food and provide their corresponding recipes using Flutter and Tensorflow Lite. It incorporates an Image Classification Model (Mobilenet V2), trained with Tensorflow and Keras, to recognize food items. The model was then converted to the Tensorflow Lite format for efficient on-device inference, while the mobile app built with Flutter utilized the tflite library for seamless offline inference.",
    "tags": ["deep-learning", "cross-app-development"],
    "featuredTags": ["Deep Learning", "App Development"],
    "techStack": [
      {
        "name": "Flutter",
        "image": "../images/others/flutter.png"
      },
      {
        "name": "Tensorflow",
        "image": "../images/others/tensorflow.png"
      },
      {
        "name": "Keras",
        "image": "../images/others/keras.png"
      }
    ],
    "images": [
      "../images/projects/SeeFood/SeeFood2.png",
      "../images/projects/SeeFood/SeeFood1.png"
    ],
    "demo": "",
    "github": "https://github.com/gsriram24/see_food"
  },

  {
    "slug": "crowdrepel",
    "isFeatured": false,
    "projectName": "CrowdRepel",
    "summary": "A Deep Learning and GeoLocation based service that enables users and organizations to help maintain physical distance.",
    "description": "CrowdRepel is a cutting-edge solution leveraging Deep Learning and GeoLocation technologies to help individuals and organizations maintain appropriate physical distancing and prevent the spread of COVID-19. This innovative service utilizes a Pytorch Object Detection model (IterDet) to accurately detect and count people in highly crowded environments using CCTV cameras. Additionally, an advanced algorithm utilizing Perspective Transformation was developed to flag social distancing violations. The end-user application, built using the MERN stack, provides insightful Crowd Density Analytics to empower individuals to make informed decisions and stay safe.",
    "tags": [
      "deep-learning",
      "frontend-development",
      "backend-development",
      "python"
    ],
    "featuredTags": ["Deep Learning", "Fullstack Development"],
    "techStack": [
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "PyTorch",
        "image": "../images/others/pytorch.png"
      },
      {
        "name": "OpenCV",
        "image": "../images/others/opencv.png"
      },
      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },
      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      },

      {
        "name": "Leaflet",
        "image": "../images/others/leaflet.png"
      }
    ],
    "images": [
      "../images/projects/CrowdRepel/CrowdRepel1.png",
      "../images/projects/CrowdRepel/CrowdRepel2.png",
      "../images/projects/CrowdRepel/CrowdRepel3.png",
      "../images/projects/CrowdRepel/CrowdRepel4.png"
    ],
    "demo": "https://crowd-repel.herokuapp.com/",
    "github": "https://github.com/gsriram24/crowd-repel-react"
  },

  {
    "slug": "easytravel",
    "isFeatured": false,
    "projectName": "EasyTravel",
    "summary": "A react native application showcasing the functionality of a cashless online ticketing system for daily public transport.",
    "description": "Easy Travel is a mobile application developed using React Native and Node.js that enables daily commuters to experience the convenience of a cashless ticketing system for public transport. With the app, users can simply scan a QR code assigned to the bus, select their travel details, and generate a ticket with the cost of their journey. Say goodbye to the hassle of carrying cash and counting change during daily commute, and say hello to the seamless experience of Easy Travel.",
    "tags": ["cross-app-development", "backend-development"],
    "featuredTags": ["App Development", "Backend Development"],
    "techStack": [
      {
        "name": "React Native",
        "image": "../images/others/react.png"
      },

      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },

      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      }
    ],
    "images": [
      "../images/projects/EasyTravel/easytravel1.png",
      "../images/projects/EasyTravel/easytravel2.png"
    ],
    "demo": "",
    "github": "https://github.com/gsriram24/EasyBMTC"
  },

  {
    "slug": "hobbyit",
    "isFeatured": false,
    "projectName": "HobbyIt",
    "summary": "An app to connect individuals with shared interests through a user-friendly mobile interface.",
    "description": "HobbyIt is a mobile application developed with React Native that connects individuals sharing similar interests, thus fostering a sense of community among them. The app utilizes the powerful features of Firebase such as Cloud Firestore, Auth, and Cloud Storage for seamless backend management. HobbyIt empowers users to effortlessly find and interact with like-minded individuals, opening up new avenues for personal growth and meaningful connections.",
    "tags": ["cross-app-development"],
    "featuredTags": ["App Development"],
    "techStack": [
      {
        "name": "React Native",
        "image": "../images/others/react.png"
      },
      {
        "name": "Firebase",
        "image": "../images/others/firebase.png"
      }
    ],
    "images": [
      "../images/projects/HobbyIt/hobbyit1.png",
      "../images/projects/HobbyIt/hobbyit2.png",
      "../images/projects/HobbyIt/hobbyit3.png",
      "../images/projects/HobbyIt/hobbyit4.png"
    ],
    "demo": "",
    "github": "https://github.com/gsriram24/hobbyit"
  },

  {
    "slug": "iclog",
    "isFeatured": false,
    "projectName": "ICLog",
    "summary": "A PyQT5-based desktop application for managing lab components with a user-friendly GUI.",
    "description": "ICLog is a sophisticated desktop application consisting of a student panel and admin panel, meticulously crafted using PyQT5 to simplify the management of lab components. Using the student panel, students can request lab components from available stock, while the admin panel allows in-charges to approve or reject requests, view transaction history, and track pending transactions. All relevant user details, component information, and transaction records are securely managed by a MySQL database.",
    "tags": ["python"],
    "featuredTags": ["Python"],
    "techStack": [
      {
        "name": "Python 3",
        "image": "../images/others/python.png"
      },
      {
        "name": "PyQT 5",
        "image": "../images/others/pyqt.png"
      },
      {
        "name": "MySQL",
        "image": "../images/others/mysql.png"
      }
    ],
    "images": [
      "../images/projects/ICLog/ICLog3.png",
      "../images/projects/ICLog/ICLog2.png",
      "../images/projects/ICLog/ICLog1.png"
    ],
    "demo": "",
    "github": "https://github.com/gsriram24/ic-log"
  }
]
