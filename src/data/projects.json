[
  {
    "slug": "attendance-system",
    "isFeatured": true,
    "projectName": "Automated Attendance System using Facial Recognition",
    "summary": "A university attendance system that uses facial recognition to aid professors with maintaining attendance record.",
    "description": "This project is aimed to show a digitized attendance system for schools and universities to maintain attendance record for students. The Face Recognition REST API was built using Flask and the face_recognition library. An app was built using Flutter for professors to record attendance by clicking one or more photos of the class. An admin panel was built using React and Redux for the admins to manage students, teachers and classes. The backend for handling student, teacher, classes and attendance data was built using Node.js/Express.js. MongoDB was used as the database. Known photos of students are stored in Firebase Cloud Storage",
    "tags": [
      "frontend-development",
      "backend-development",
      "cross-app-development",
      "deep-learning",
      "python"
    ],
    "featuredTags": ["Deep Learning", "Fullstack Development"],
    "techStack": [
      {
        "name": "Flutter",
        "image": "../images/others/flutter.png"
      },
      {
        "name": "Flask",
        "image": "../images/others/flask.png"
      },
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "Redux",
        "image": "../images/others/redux.png"
      },
      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },
      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      },
      {
        "name": "Firebase",
        "image": "../images/others/firebase.png"
      }
    ],
    "images": [
      "../images/projects/AttendanceSystem/Attendance1.png",
      "../images/projects/AttendanceSystem/Attendance2.png",
      "../images/projects/AttendanceSystem/Attendance3.png"
    ],
    "github": "https://github.com/sgcuber24/attendance_system_face_recognition_api"
  },
  {
    "slug": "ppresports-portal",
    "isFeatured": true,
    "projectName": "League Registration Portal for PPR Esports",
    "summary": "Development of a full stack application for PPR Esports, a Sim Racing esports organization.",
    "description": "This fullstack application is aimed to allow PPR Esports to host their tournaments online and have users to register for it. It also includes an admin panel for the admins to manage their users and leagues. The backend was built using Node.js/Express.js along with Discord Authentication. MongoDB was used as the database. The frontend was built using React.js with Redux for state management. ",
    "tags": ["frontend-development", "backend-development"],
    "featuredTags": ["Fullstack Development"],
    "techStack": [
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "Redux",
        "image": "../images/others/redux.png"
      },
      {
        "name": "Tailwind CSS",
        "image": "../images/others/tailwind.png"
      },
      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },
      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      }
    ],
    "images": [
      "../images/projects/PPR/PPR1.png",
      "../images/projects/PPR/PPR2.png",
      "../images/projects/PPR/PPR3.png",
      "../images/projects/PPR/PPR4.png",
      "../images/projects/PPR/PPR5.png"
    ],
    "testimonials": {
      "name": "James Warren",
      "designation": "Owner, PPR Esports",
      "testimonial": "Working with G. Sriram on this site was a pleasure. We gave him a challenging task, with plenty of live functionality requirements, and the implementation of functions that he was unfamiliar with but learned. The work was done in a timely manner and was professional the whole time. Any requests we had were adhered to, and we will continue to be working with him in the future for any projects"
    },
    "demo": "https://ppresports.com/",
    "github": ""
  },
  {
    "slug": "karankowshik-portfolio",
    "isFeatured": true,
    "projectName": "Portfolio Website for Karan Kowshik",
    "summary": "Development of a portfolio website for Karan Kowshik, UI/UX and Web Designer. ",
    "description": "This project involved the development a responsive portfolio website for Karan Kowshik. To develop a full fledged portfolio website with dynamically generated pages, GatsbyJS was used. Major part of styling and layout was done using TailwindCSS. Framer Motion was used to create the animations seen in the website.",
    "tags": ["frontend-development"],
    "featuredTags": ["Frontend Development"],
    "techStack": [
      {
        "name": "Gatsby",
        "image": "../images/others/gatsby.png"
      },
      {
        "name": "Tailwind CSS",
        "image": "../images/others/tailwind.png"
      },
      {
        "name": "Framer Motion",
        "image": "../images/others/framer-motion.png"
      }
    ],
    "images": [
      "../images/projects/KaranPortfolio/karan1.png",
      "../images/projects/KaranPortfolio/karan2.png",
      "../images/projects/KaranPortfolio/karan3.png",
      "../images/projects/KaranPortfolio/karan4.png"
    ],
    "testimonials": {
      "name": "Karan Kowshik",
      "designation": "UI/UX & Web Designer",
      "testimonial": "It was amazing working with Sriram on my portfolio. Being a UI/UX designer I had specific requirements in terms of pixel perfection and smooth complex animations. Sriram took on these challenges brilliantly, delivering exactly what I was looking for. It was an amazing journey collaborating with him and I learned a lot of things during that time."
    },
    "demo": "https://karankowshik.com",
    "github": ""
  },

  {
    "slug": "substitute_teacher_management",
    "isFeatured": false,
    "projectName": "Substitue Teacher Management",
    "summary": "An app built using Flutter to efficiently find substitute teachers in an educational environment.",
    "description": "This is a mobile application built to help admins of an institution to find and inform substitute teachers efficiently. Using this app, the admin can view a list of substitute teachers generated based on a few constraints for any given teacher, on any given day. Upon choosing the substitute teacher, the admin has the option to notify the teacher via E-Mail regarding the same.",
    "tags": ["cross-app-development"],
    "featuredTags": ["App Development"],
    "techStack": [
      {
        "name": "Flutter",
        "image": "../images/others/flutter.png"
      },
      {
        "name": "Firebase",
        "image": "../images/others/firebase.png"
      }
    ],
    "images": [
      "../images/projects/Substitute/Substitute1.png",
      "../images/projects/Substitute/Substitute2.png"
    ],
    "demo": "",
    "github": "https://github.com/sgcuber24/substitute_teacher_management"
  },

  {
    "slug": "seefood",
    "isFeatured": false,
    "projectName": "SeeFood",
    "summary": "An App built using Flutter and Tensorflow Lite to detect 10 different food classes.",
    "description": "Inspired by the show Sillicon Valley, SeeFood is an application built using Flutter and Tensorflow Lite to classify 10 different types of food and show their respective recipes. To achieve this, an Image Classification Model (Mobilenet V2) was trained using Tensorflow and Keras. Then the model was convereted to the Tensorflow Lite format for on-device inference. Finally, a mobile application built using Flutter, using the tflite library for offline inference",
    "tags": ["deep-learning", "cross-app-development"],
    "featuredTags": ["Deep Learning", "App Development"],
    "techStack": [
      {
        "name": "Flutter",
        "image": "../images/others/flutter.png"
      },
      {
        "name": "Tensorflow",
        "image": "../images/others/tensorflow.png"
      },
      {
        "name": "Keras",
        "image": "../images/others/keras.png"
      }
    ],
    "images": [
      "../images/projects/SeeFood/SeeFood2.png",
      "../images/projects/SeeFood/SeeFood1.png"
    ],
    "demo": "",
    "github": "https://github.com/sgcuber24/see_food"
  },

  {
    "slug": "crowdrepel",
    "isFeatured": false,
    "projectName": "CrowdRepel",
    "summary": "A Deep Learning and GeoLocation based service that enables users and organizations to help maintain physical distance.",
    "description": "CrowdRepel is a Deep Learning and GeoLocation based service that aims to enable users and organizations to maintain the appropriate physical distance and avoid contracting the Coronavirus. A Pytorch Object Detection model (IterDet) to perform person detection in highly crowded environments was trained to get the people count through CCTV cameras. To flag social distancing violations, an algorithm using Perspective Transformation was written. An end user application was built using the MERN stack to provide Crowd Density Analytics to common people.",
    "tags": [
      "deep-learning",
      "frontend-development",
      "backend-development",
      "python"
    ],
    "featuredTags": ["Deep Learning", "Fullstack Development"],
    "techStack": [
      {
        "name": "React",
        "image": "../images/others/react.png"
      },
      {
        "name": "PyTorch",
        "image": "../images/others/pytorch.png"
      },
      {
        "name": "OpenCV",
        "image": "../images/others/opencv.png"
      },
      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },
      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      },

      {
        "name": "Leaflet",
        "image": "../images/others/leaflet.png"
      }
    ],
    "images": [
      "../images/projects/CrowdRepel/CrowdRepel1.png",
      "../images/projects/CrowdRepel/CrowdRepel2.png",
      "../images/projects/CrowdRepel/CrowdRepel3.png",
      "../images/projects/CrowdRepel/CrowdRepel4.png"
    ],
    "demo": "https://crowd-repel.herokuapp.com/",
    "github": "https://github.com/sgcuber24/crowd-repel-react"
  },

  {
    "slug": "easytravel",
    "isFeatured": false,
    "projectName": "EasyTravel",
    "summary": "A simple mobile application to show the working of an online ticketing system for daily public transport.",
    "description": "Easy Travel is an application built using React Native and Node.js to show the working of a cashless ticketing system for daily public transport. Using this app, Daily commuters can scan a QR Code associated with a bus and select their journey details, and a ticket would be generated calculating the cost of the journey.",
    "tags": ["cross-app-development", "backend-development"],
    "featuredTags": ["App Development", "Backend Development"],
    "techStack": [
      {
        "name": "React Native",
        "image": "../images/others/react.png"
      },

      {
        "name": "Node.js",
        "image": "../images/others/node.png"
      },

      {
        "name": "MongoDB",
        "image": "../images/others/mongodb.png"
      }
    ],
    "images": [
      "../images/projects/EasyTravel/easytravel1.png",
      "../images/projects/EasyTravel/easytravel2.png"
    ],
    "demo": "",
    "github": "https://github.com/sgcuber24/EasyBMTC"
  },

  {
    "slug": "hobbyit",
    "isFeatured": false,
    "projectName": "HobbyIt",
    "summary": "A mobile application to connect people having similar interests.",
    "description": "HobbyIt is a mobile application built to connect people having similar interests. The application was built using React Native and various services of Firebase such as Cloud Firestore, Auth and Cloud Storage were used for the backend. Using this app, people who register can find a list of people who have one or more common interests.",
    "tags": ["cross-app-development"],
    "featuredTags": ["App Development"],
    "techStack": [
      {
        "name": "React Native",
        "image": "../images/others/react.png"
      },
      {
        "name": "Firebase",
        "image": "../images/others/firebase.png"
      }
    ],
    "images": [
      "../images/projects/HobbyIt/hobbyit1.png",
      "../images/projects/HobbyIt/hobbyit2.png",
      "../images/projects/HobbyIt/hobbyit3.png",
      "../images/projects/HobbyIt/hobbyit4.png"
    ],
    "demo": "",
    "github": "https://github.com/sgcuber24/hobbyit"
  },

  {
    "slug": "iclog",
    "isFeatured": false,
    "projectName": "ICLog",
    "summary": "A GUI based desktop application to manage components in Labs.",
    "description": "ICLog is a Desktop Application consisting of Admin Panel and Student Panel built using PyQT5 to help lab in-charges manage lab components. A student in a given lab can request for one or more components that are available in stock, and the admin/incharge can approve or reject their request. The admin can also view the transaction history, or pending transactions in their dashboard. User details, component details and transaction history managed by MySQL.",
    "tags": ["python"],
    "featuredTags": ["Python"],
    "techStack": [
      {
        "name": "Python 3",
        "image": "../images/others/python.png"
      },
      {
        "name": "PyQT 5",
        "image": "../images/others/pyqt.png"
      },
      {
        "name": "MySQL",
        "image": "../images/others/mysql.png"
      }
    ],
    "images": [
      "../images/projects/ICLog/ICLog3.png",
      "../images/projects/ICLog/ICLog2.png",
      "../images/projects/ICLog/ICLog1.png"
    ],
    "demo": "",
    "github": "https://github.com/sgcuber24/ic-log"
  }
]
